.navbar, .sidebar-mask {
  position: fixed;
  top: 0;
  left: 0;
}

/* 인라인 요소들을 미리 inline-block으로 바꿔 놓는 식으로 쓰네. */
.navbar a, .navbar span {
  display: inline-block;
}

.navbar{
  /* rem은 root의 폰트사이즈에 따라 상대적으로 값이 변하는 단위이다. */
  padding: 0.7rem 1.5rem; 
  /* 
    https://velog.io/@ursr0706/line-height-%EC%86%8D%EC%84%B1
    줄간격을 위한 속성. 상대적인 값을 쓰는게 보기 좋다.
    텍스트의 위 아래에 leading영역이라는게 있다.
    line-height는 font-size + leading영역이 되는 것이다.
    실제로 line-height를 늘렸을 떄 커지는 것은 leading영역이다.
  */
  line-height: 2.2rem;
  z-index: 20;
  /*
    right 0을 주니까 width가 꽉 차게 들어간다는 걸 알게 됐음.
    근데 어쨰서 이렇게 되는지는 모름. -> position: fixed, absolute와 함꼐 사용하는 경우에 꽉 찬다고 함.
  */
  right: 0;
  height: 3.6rem;
  background-color: #fff;
  /* 
    요소의 전체 너비와 높이를 어떻게 계산하는지 설정 
    기본 값은 content로 padding, border값에 따라 box가 같이 커짐.
    하지만 border-box는 padding, border에 box가 영향을 받지 않음.
  */
  box-sizing: border-box;
  border-bottom: 1px solid #eaecef;
}

.navbar .site-name {
  font-size: 1.3rem; /* 폰트 사이즈 까지도 rem 사용해서 처리하는거 좋다.*/
  font-weight: 600;
  color: #2c3e50;
  position: relative;
}

.navbar .links {
  max-width: 522px; /* 이거만 inline으로 되어 있던데 이유가 있었을까? 궁금... */
  padding-left: 1.5rem;
  box-sizing: border-box;
  background-color: #fff;
  /* 
    https://www.daleseo.com/css-white-space/
    한 html 요소 내에서 공백에 대한 처리방식을 정할 수 있도록 해준다.
    기본은 normal로 무조건 html영역을 넘어가면 줄바꿈을 해주고 줄바꿈 문자를 사용한다던가 하는 것이 불가능 함
    nowrap은 줄바꿈을 하지 않고 영역을 넘어가면 그냥 쭉 이어서 보여주고 줄바꿈 문자 같은게 안되는 것은 normal과 동일.
  */
  white-space: nowrap;
  font-size: 0.9rem;
  position: absolute;
  right: 1.5rem;
  top: 0.7rem;
  display: flex;
}

@media (max-width: 959px) {
  .search-box input {
    cursor: pointer;
    width: 0;
    border-color: transparent;
    position: relative;
  }
  /* focus가 갔을 때 이런 식으로 처리하는 거 진짜 개꿀이지 않나 하는 생각이 든다. */
  .search-box input:focus {
    cursor: text;
    width: 10rem;
  }
}

.search-box {
  margin-right: 1rem;
}

@media (min-width: 959px) {
  .search-box input {
    border: 1px solid #cfd4db;
  }
}

.search-box input:focus{
  cursor: auto;
  border-color: green;
}
.search-box input {
  height: 2rem;
  color: #4e6e8e;
  display: inline-block;
  border-radius: 2rem;
  font-size: .9rem;
  line-height: 2rem;
  padding: 0 0.5rem 0 2rem;
  outline: none;
  /* 
    요소의 변화에 대한 트랜지션 효과를 적용해준다.
    all이 있기 때문에 width, height 등 무슨 속성이 바뀌더라도 트랜지션이 무조건 일어나게 됨.
  */
  transition: all .2s ease;
  background: #fff url(./search_30.svg) 0.6rem 0.5rem no-repeat;
  background-size: 1rem;
}

.nav-links {
  display: inline-block; /* nav의 원래 display가 뭔지는 잘 모르겠다. */
}

.nav-links .nav-item:first-child{
  margin-left: 0;
}

.nav-links .nav-item {
  position: relative;
  display: inline-block;
  line-height: 2rem;
  margin-left: 1.5rem;
}

.nav-links a {
  line-height: 1.4rem;
  /* color: inherit; */
  color: #2c3e50;
}

.router-link-active {
  margin-bottom: -2px;
  border-bottom: 2px solid #46bd87;
}

.dropdown-wrapper .dropdonw-title {
  /* font-size: .9rem; */
  background: transparent;
  border: none;
}

/* 
  이게 세모로 나오는데 어떻게 이럴수가 있는지 잘 모르겠네..
  원래 사이트가 따로 작성했길래 나도 일단 따로 작성해 놓았다.
*/
.arrow.down {
  border-top: 6px solid #ccc;
}
.arrow.down {
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
}

.dropdown-wrapper .nav-dropdown {
  display: none;
  height: auto!important;
  /* 
    vh는 viewport heigth의 약자. vw도 비슷함.
    100vh가 화면의에 보이는 크기를 의미하는 것임.
    따라서 height가 1000px이라고 하면 100vh가 1000px이라고 할 수 있음.
  */
  max-height: calc(100vh - 2.7rem);
  overflow-y: auto;
  position: absolute;
  top: 100%;
  right: 0;
  background-color: #fff;
  border: 1px solid;
  border-color: #ddd #ddd #ccc;
  border-radius: 0.25rem;
  white-space: nowrap;
  box-sizing: border-box;
  margin: 0;
  right: 0;
  text-align: left;
  padding: .6rem 0;
}

.dropdown-wrapper:hover .nav-dropdown {
  display: inline-block;
}

.dropdown-wrapper .nav-dropdown .dropdown-item a {
  display: block;
  position: relative;
  padding: 0 1.5rem 0 1.25rem;
}

.dropdown-wrapper .nav-dropdown .dropdown-item a:hover {
  color: #46bd87;
}